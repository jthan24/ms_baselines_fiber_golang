version: "3"

vars:
  EXE: fiber-baseline{{exeExt}}

tasks:
  default:
    cmds:
      - task: go:dev

  go:mod:download:
    cmds:
      - go mod download

  go:generate:
    desc: Generate wire code generation
    cmds:
      - go generate ./...
    sources:
      - ./wire.go
    generates:
      - ./wire_gen.go

  go:docs:
    desc: Generate the swagger docs
    cmds:
      - swag init -o app/fbr/_docs
    sources:
      - ./app/fbr/handlers.go
    generates:
      - ./app/fbr/_docs/*

  go:dev:
    desc: Start the local environment
    deps: [go:generate, go:docs, docker:dev]
    cmds:
      - godotenv -f .env air -c .air.toml

  docker:dev:
    desc: Start the local environment
    cmds:
      - docker compose up -d

  docker:start:
    desc: Start the app as a container
    deps: [docker:build]
    cmds:
      - docker run -it --rm --env-file .docker.env -v ~/.aws:/nobody/.aws --network ms-baselines-golang  -p 3000:3000 ms-baselines-golang:latest

  docker:build:
    desc: Build docker image
    cmds:
      - docker build -t ms-baselines-golang:latest .

  go:build:
    desc: Build the web app
    deps: [go:docs]
    cmds:
      - mkdir -p bin
      - CGO_ENABLED=0 go build -o bin/{{.EXE}} .
    sources:
      - ./**/*.go
    generates:
      - ./{{.EXE}}
